{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}C:/Users/jdmichler/git/weather_project/tanzania/weather_code/logs/tza_npsy1_converter.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}21 Apr 2020, 15:01:45
{txt}
{com}. 
. 
. * **********************************************************************
. * 1 - converts rainfall data
. * **********************************************************************
. 
. /* define local with all sub-folders in it
> loc folderList : dir "`root'" dirs "NPSY1_rf*"
> 
> * define local with all files in each sub-folder
> foreach folder of loc folderList {c -(}
>         
>         *create directories to write output to
>         qui: capture mkdir "`export'/`folder'/"
>         
>         * loop through each file in the above local
>         loc fileList : dir "`root'/`folder'" files "*.csv"
>         
>         * loop through each file in the above local
>         foreach file in `fileList' {c -(}
>                 
>                 * import the .csv files - this takes time
>                 import delimited "`root'/`folder'/`file'", varnames (1) clear
> 
>                 * drop early and late observations
>                 drop    rf_19830101-rf_19831031 ///
>                                 rf_20170601-rf_20171231
> 
>                 * drop unnecessary months, this will make renaming variables easier
>                 foreach var of varlist rf_* {c -(}
>                         if substr("`var'", 8, 2) == "06" drop `var'
>                         if substr("`var'", 8, 2) == "07" drop `var'
>                         if substr("`var'", 8, 2) == "08" drop `var'
>                         if substr("`var'", 8, 2) == "09" drop `var'
>                         if substr("`var'", 8, 2) == "10" drop `var'
>         {c )-}
>                 * shift early month variables one year forward, year refers to start of season
>                 foreach var of varlist rf_* {c -(}
>                         loc year = substr("`var'", 4, 4)
>                         loc month = substr("`var'", 8, 2)
>                         loc day = substr("`var'", 10, 2)
>                         loc cyear = `year'-1
>                         if `month' < 11 rename `var' rf_`cyear'`month'`day'
>                 {c )-}
>                 * rename the five early month variables                 
>                 foreach var of varlist rf_* {c -(}
>                         loc year = substr("`var'", 4, 4)
>                         loc month = substr("`var'", 8, 2)
>                         loc day = substr("`var'", 10, 2)
>                         loc nmonth = `month'+2
>                         if `month' == 05 rename `var' rf_`year'0`nmonth'`day'
>                 {c )-}
>                 foreach var of varlist rf_* {c -(}
>                         loc year = substr("`var'", 4, 4)
>                         loc month = substr("`var'", 8, 2)
>                         loc day = substr("`var'", 10, 2)
>                         loc nmonth = `month'+2
>                         if `month' == 04 rename `var' rf_`year'0`nmonth'`day'
>                 {c )-}
>                 foreach var of varlist rf_* {c -(}
>                         loc year = substr("`var'", 4, 4)
>                         loc month = substr("`var'", 8, 2)
>                         loc day = substr("`var'", 10, 2)
>                         loc nmonth = `month'+2
>                         if `month' == 03 rename `var' rf_`year'0`nmonth'`day'
>                 {c )-}
>                 foreach var of varlist rf_* {c -(}
>                         loc year = substr("`var'", 4, 4)
>                         loc month = substr("`var'", 8, 2)
>                         loc day = substr("`var'", 10, 2)
>                         loc nmonth = `month'+2
>                         if `month' == 02 rename `var' rf_`year'0`nmonth'`day'
>                 {c )-}
>                 foreach var of varlist rf_* {c -(}
>                         loc year = substr("`var'", 4, 4)
>                         loc month = substr("`var'", 8, 2)
>                         loc day = substr("`var'", 10, 2)
>                         loc nmonth = `month'+2
>                         if `month' == 01 rename `var' rf_`year'0`nmonth'`day'
>                 {c )-}
>                 * rename the two later month variables                  
>                 foreach var of varlist rf_* {c -(}
>                         loc year = substr("`var'", 4, 4)
>                         loc month = substr("`var'", 8, 2)
>                         loc day = substr("`var'", 10, 2)
>                         loc nmonth = `month'-10
>                         if `month' == 11 rename `var' rf_`year'0`nmonth'`day'
>                 {c )-}
>                 foreach var of varlist rf_* {c -(}
>                         loc year = substr("`var'", 4, 4)
>                         loc month = substr("`var'", 8, 2)
>                         loc day = substr("`var'", 10, 2)
>                         loc nmonth = `month'-10
>                         if `month' == 12 rename `var' rf_`year'0`nmonth'`day'
>                 {c )-}
>                 * define locals to govern file naming
>                 loc dat = substr("`file'", 1, 5)
>                 loc ext = substr("`file'", 7, 2)
>                 loc sat = substr("`file'", 10, 3)
>                 
>         * save file
>         customsave , idvar(hhid) filename("`dat'_`ext'_`sat'_daily.dta") ///
>                 path("`export'/`folder'") dofile(TZA_NPSY1_converter) user(jdmichler)
>         {c )-}
> {c )-}
> */
. 
. * **********************************************************************
. * 2 - converts temperature data
. * **********************************************************************
. 
. * define local with all sub-folders in it
.         loc folderList : dir "`root'" dirs "NPSY1_t*"
{txt}
{com}. 
. * loop through each of the sub-folders in the above local
. foreach folder of local folderList {c -(}
{txt}  2{com}.         
.         *create directories to write output to
.         qui: capture mkdir "`export'/`folder'/"
{txt}  3{com}.         
.         * define local with all files in each sub-folder        
.                 loc fileList : dir "`root'/`folder'" files "*.csv"
{txt}  4{com}.                 
.         * loop through each file in the above local     
.         foreach file in `fileList' {c -(}
{txt}  5{com}.                 
.                 * import the .csv files - this takes time       
.                 import delimited "`root'/`folder'/`file'", varnames(1) encoding(Big5) clear
{txt}  6{com}. 
.                 * drop early and late observations
.                 drop    tmp_19830101-tmp_19831031 ///
>                                 tmp_20170601-tmp_20171231
{txt}  7{com}. 
.                 * drop unnecessary months, this will make renaming variables easier (June-Oct)
.                 foreach var of varlist tmp_* {c -(}
{txt}  8{com}.                         if substr("`var'", 9, 2) == "06" drop `var'
{txt}  9{com}.                         if substr("`var'", 9, 2) == "07" drop `var'
{txt} 10{com}.                         if substr("`var'", 9, 2) == "08" drop `var'
{txt} 11{com}.                         if substr("`var'", 9, 2) == "09" drop `var'
{txt} 12{com}.                         if substr("`var'", 9, 2) == "10" drop `var'
{txt} 13{com}.                 {c )-}
{txt} 14{com}.                 * shift early month variables one year forward
.                 foreach var of varlist tmp_* {c -(}
{txt} 15{com}.                         loc year = substr("`var'", 5, 4)
{txt} 16{com}.                         loc month = substr("`var'", 9, 2)
{txt} 17{com}.                         loc day = substr("`var'", 11, 2)
{txt} 18{com}.                         loc cyear = `year'-1
{txt} 19{com}.                         if `month' < 11 rename `var' tmp_`cyear'`month'`day'
{txt} 20{com}.                 {c )-}
{txt} 21{com}.                 * rename the five early month variables                 
.                 foreach var of varlist tmp_* {c -(}
{txt} 22{com}.                         loc year = substr("`var'", 5, 4)
{txt} 23{com}.                         loc month = substr("`var'", 9, 2)
{txt} 24{com}.                         loc day = substr("`var'", 11, 2)
{txt} 25{com}.                         loc nmonth = `month'+2
{txt} 26{com}.                         if `month' == 05 rename `var' tmp_`year'0`nmonth'`day'
{txt} 27{com}.                 {c )-}
{txt} 28{com}.                 foreach var of varlist tmp_* {c -(}
{txt} 29{com}.                         loc year = substr("`var'", 5, 4)
{txt} 30{com}.                         loc month = substr("`var'", 9, 2)
{txt} 31{com}.                         loc day = substr("`var'", 11, 2)
{txt} 32{com}.                         loc nmonth = `month'+2
{txt} 33{com}.                         if `month' == 04 rename `var' tmp_`year'0`nmonth'`day'
{txt} 34{com}.                 {c )-}
{txt} 35{com}.                 foreach var of varlist tmp_* {c -(}
{txt} 36{com}.                         loc year = substr("`var'", 5, 4)
{txt} 37{com}.                         loc month = substr("`var'", 9, 2)
{txt} 38{com}.                         loc day = substr("`var'", 11, 2)
{txt} 39{com}.                         loc nmonth = `month'+2
{txt} 40{com}.                         if `month' == 03 rename `var' tmp_`year'0`nmonth'`day'
{txt} 41{com}.                 {c )-}
{txt} 42{com}.                 foreach var of varlist tmp_* {c -(}
{txt} 43{com}.                         loc year = substr("`var'", 5, 4)
{txt} 44{com}.                         loc month = substr("`var'", 9, 2)
{txt} 45{com}.                         loc day = substr("`var'", 11, 2)
{txt} 46{com}.                         loc nmonth = `month'+2
{txt} 47{com}.                         if `month' == 02 rename `var' tmp_`year'0`nmonth'`day'
{txt} 48{com}.                 {c )-}
{txt} 49{com}.                 foreach var of varlist tmp_* {c -(}
{txt} 50{com}.                         loc year = substr("`var'", 5, 4)
{txt} 51{com}.                         loc month = substr("`var'", 9, 2)
{txt} 52{com}.                         loc day = substr("`var'", 11, 2)
{txt} 53{com}.                         loc nmonth = `month'+2
{txt} 54{com}.                         if `month' == 01 rename `var' tmp_`year'0`nmonth'`day'
{txt} 55{com}.                 {c )-}
{txt} 56{com}.                 
.                 * rename the two later month variables                  
.                 foreach var of varlist tmp_* {c -(}
{txt} 57{com}.                         loc year = substr("`var'", 5, 4)
{txt} 58{com}.                         loc month = substr("`var'", 9, 2)
{txt} 59{com}.                         loc day = substr("`var'", 11, 2)
{txt} 60{com}.                         loc nmonth = `month'-10
{txt} 61{com}.                         if `month' == 11 rename `var' tmp_`year'0`nmonth'`day'
{txt} 62{com}.                 {c )-}
{txt} 63{com}.                 foreach var of varlist tmp_* {c -(}
{txt} 64{com}.                         loc year = substr("`var'", 5, 4)
{txt} 65{com}.                         loc month = substr("`var'", 9, 2)
{txt} 66{com}.                         loc day = substr("`var'", 11, 2)
{txt} 67{com}.                         loc nmonth = `month'-10
{txt} 68{com}.                         if `month' == 12 rename `var' tmp_`year'0`nmonth'`day'
{txt} 69{com}.                 {c )-}
{txt} 70{com}. 
.                 * define locals to govern file naming           
.                 loc     dat = substr("`file'", 1, 5)
{txt} 71{com}.                 loc ext = substr("`file'", 7, 2)
{txt} 72{com}.                 loc sat = substr("`file'", 10, 2)
{txt} 73{com}. 
.         * save file
.         customsave , idvar(hhid) filename("`dat'_`ext'_`sat'_daily.dta") ///
>                 path("`export'/`folder'") dofile(TZA_NPSY1_converter) user(jdmichler)
{txt} 74{com}.         {c )-}
{txt} 75{com}. {c )-}
{res}{text}(12,785 vars, 3,265 obs)
{res} with do file TZA_NPSY1_converter by user jdmichler using computer LAPTOP-8S62UTHH

{text}(12,785 vars, 3,265 obs)
{err}{hline 2}Break{hline 2}
{txt}{search r(1), local:r(1);}

end of do-file

{err}{hline 2}Break{hline 2}
{txt}{search r(1), local:r(1);}

{com}. exit, clear
